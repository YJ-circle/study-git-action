name: Check GPG Signatures

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  check-signatures:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git user identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }} --depth=1

      - name: Check for unsigned commits
        id: check
        run: |
          COMMITS=$(git log origin/${{ github.base_ref }}..HEAD --pretty=format:"%H %G?" || echo "")
          UNSIGNED=0

          if [ -z "$COMMITS" ]; then
            echo "No commits found for comparison. Exiting."
            echo "unsigned=0" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          while read -r COMMIT STATUS; do
            if [ "$STATUS" != "G" ]; then
              echo "Unsigned or unverified commit: $COMMIT (status: $STATUS)"
              UNSIGNED=1
            fi
          done <<< "$COMMITS"
          echo "unsigned=$UNSIGNED" >> "$GITHUB_OUTPUT"

      - name: Comment if unsigned commits
        if: steps.check.outputs.unsigned == '1'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚫 이 PR에는 **GPG 서명되지 않은 커밋**이 포함되어 있어요.\n\n모든 커밋을 서명(`git commit -S`)하고 다시 push해주세요 🙏"
            })

      - name: Close PR if unsigned commits
        if: steps.check.outputs.unsigned == '1'
        uses: peter-evans/close-pull@v3
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: >-
            🚫 GPG 서명이 없는 커밋이 포함되어 있어 이 PR은 자동으로 닫혔습니다.
            모든 커밋을 `git commit -S`로 서명해주세요.